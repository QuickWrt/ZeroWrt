name: Build releases

on:
  workflow_dispatch:
    inputs:
      device:
        description: '选择构建设备'
        required: true
        default: 'x86_64'
        type: choice
        options:
          - 'rockchip'
          - 'x86_64'
      compile_options:
        description: '选择构建选项'
        required: true
        default: 'release'
        type: choice
        options:
          - 'accelerated'
          - 'normal'
          - 'toolchain-only' 

jobs:
  build:
    name: Build ${{ github.event.inputs.device }}
    runs-on: [self-hosted, ZeroWrt]
    defaults:
      run:
        shell: bash

    steps:
    - name: 查看
      uses: actions/checkout@main

    - name: Show system
      run: |
        echo -e "\n\e[1;32mCPU:\e[0m"
        echo "$(grep 'model name' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}') ($(grep 'cpu MHz' /proc/cpuinfo | head -1 | awk -F ': ' '{print $2}')MHz) x $(grep processor /proc/cpuinfo  | wc -l)"
        echo -e "\n\e[1;32mMemory:\e[0m"
        free -h
        echo -e "\n\e[1;32mStorage:\e[0m"
        df -Th / /mnt
        echo -e "\n\e[1;32mSystem:\e[0m"
        lsb_release -a
        echo -e "\n\e[1;32mKernel:\e[0m"
        uname -a
        echo

    - name: Compile OpenWrt
      id: compile
      run: |
        bash <(curl -sS ${{ secrets.script_url_general }}) v24 ${{ github.event.inputs.device }} ${{ github.event.inputs.compile_options }}

    - name: Prepare Firmware Files
      run: |
        mkdir -p rom
        elif [ "${{ github.event.inputs.device }}" = "x86_64" ]; then
          cp -a openwrt/bin/targets/x86/*/*-squashfs-combined-efi.img.gz rom/
          cp -a openwrt/bin/targets/x86/*/*-generic-rootfs.tar.gz rom/
        elif [ "${{ github.event.inputs.device }}" = "rockchip" ]; then
          cp -a openwrt/bin/targets/rockchip/*/*.img.gz rom/
        fi

    - name: Create release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
      with:
        tag_name: openwrt-24.10
        files: ${{ env.build_dir }}/rom/*
